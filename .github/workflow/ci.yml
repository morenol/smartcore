name: CI

on: [push, pull_request, release]

jobs:
  macos:
    runs-on: macos-latest
    environment:
      TZ: "/usr/share/zoneinfo/your/location"
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          default: true
      - name: Stable Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [
          { target: "x86_64-pc-windows-msvc" },
          { target: "i686-pc-windows-msvc" },
        ]    
    environment:
      TZ: "/usr/share/zoneinfo/your/location"
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          profile: minimal
          default: true
      - name: Stable Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features
    
  linux:
    strategy:
      matrix:
        platform: [
          { target: "x86_64-unknown-linux-gnu" },
          { target: "i686-unknown-linux-gnu" },
          { target: "wasm32-unknown-unknown" },
        ]    
    environment:
      TZ: "/usr/share/zoneinfo/your/location"
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          profile: minimal
          default: true
      - name: Stable Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features